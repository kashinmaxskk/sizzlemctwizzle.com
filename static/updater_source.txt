<?php
if(!isset($_GET['id'])) exit;
else $id = stripslashes($_GET['id']);
 
// Function to compress our output
function print_gzipped_output() {
  if (headers_sent())
    $encoding = false;
  else if( strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'x-gzip') !== false )
    $encoding = 'x-gzip';
  else if( strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'gzip') !== false )
    $encoding = 'gzip';
  else
    $encoding = false;
 
  header('Content-Type: application/x-javascript; charset=utf-8');
  $contents = ob_get_clean();
  $size = strlen($contents);
 
  if ($encoding && $size > 2048) {
    header('Content-Encoding: ' . $encoding);
    print("\x1f\x8b\x08\x00\x00\x00\x00\x00");
    $contents = gzcompress($contents, 9);
    $contents = substr($contents, 0, $size);
  }
 
  print($contents);
  exit();
}
 
ob_start();
ob_implicit_flush(0);
 
// Blacklist WebKit Browsers (Chrome and Safari)
if (stristr($_SERVER['HTTP_USER_AGENT'], "AppleWebKit") != FALSE) {
  echo "// This updater only supports Greasemonkey";
  print_gzipped_output();
}
 
// Grab script data remotely
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, 'http://userscripts.org/scripts/source/'.$id.'.meta.js');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
$raw_meta = curl_exec($ch);
curl_close($ch);
 
// Parse response
preg_match("/\/\/\s*@name\s+(.+)\s*\n/i", $raw_meta, $matches);
if (count($matches) < 2) {
  echo "// Script is missing @name";
  print_gzipped_output();
}
$name = addslashes(trim($matches[1]));

preg_match("/\/\/\s*@version\s+(.+)\s*\n/i", $raw_meta, $matches);
if (count($matches) < 2 || isset($_GET['uso'])) {
  preg_match("/\/\/\s*@uso:version\s+(.+)\s*\n/i", $raw_meta, $matches);
  $version = trim($matches[1]);
  $uso = "uso:";
} else {
  $version = trim($matches[1]);
  $uso = "";
}

if (isset($_GET['noinfo']) || isset($_GET['uso'])) {
  $name = "'".$name."'";
  $version = "'".$version."'";
} else {
  $name = "typeof GM_info === 'object' ? GM_info.script.name : '".$name."'";
  $version = "typeof GM_info === 'object' ? GM_info.script.version : '".$version."'";
}
 
if(isset($_GET['var'])) {
  $var = trim(stripslashes($_GET['var']));
  if ($var == '')
     $var = '_'.$id;
  else
     $var = '_'.$var;
} else
  $var = '_'.$id;
 
echo "// The following code (updated 07/24/13) is released under public domain.\n\n(function() {";
?>
    var id = <?php echo $id.",\n"; ?>
      days = <?php if(isset($_GET['days']) && $_GET['days'] > 0.04) echo stripslashes($_GET['days']); else echo '2'; ?>,
      name = <?php echo $name; ?>,
      version = <?php echo $version; ?>,
      time = new Date().getTime();
    function call(response, secure) {
        GM_xmlhttpRequest({
            method: 'GET',
            url: 'http'+(secure ? 's' : '')+'://userscripts.org/scripts/source/'+id+'.meta.js',
            onload: function(xpr) {compare(xpr, response);},
            onerror: function(xpr) {if (secure) call(response, false);}
        });
    }
    function enable() {
        GM_registerMenuCommand('Enable '+name+' updates', function() {
            GM_setValue('updated<?php echo $var; ?>', new Date().getTime()+'');
            call(true, true)
        });
    }
    function compareVersion(r_version, l_version) {
        var r_parts = r_version.split('.'),
            l_parts = l_version.split('.'),
            r_len = r_parts.length,
            l_len = l_parts.length,
            r = l = 0;
        for(var i = 0, len = (r_len > l_len ? r_len : l_len); i < len && r == l; ++i) {
            r = +(r_parts[i] || '0');
            l = +(l_parts[i] || '0');
        }
        return (r !== l) ? r > l : false;
    }
    function compare(xpr,response) {
        var xversion=/\/\/\s*@<?php echo $uso; ?>version\s+(.+)\s*\n/i.exec(xpr.responseText);
        var xname=/\/\/\s*@name\s+(.+)\s*\n/i.exec(xpr.responseText);
        if ( (xversion) && (xname[1] == name) ) {
            xversion = xversion[1];
            xname = xname[1];
        } else {
            if ( (xpr.responseText.match('the page you requested doesn\'t exist')) || (xname[1] != name) )
            GM_setValue('updated<?php echo $var; ?>', 'off');
            return false;
        }
        var updated = compareVersion(xversion, version);
        if ( updated && confirm('A new version of '+xname+' is available.\nDo you wish to <?php
                                 echo isset($_GET["show"]) ?
                                      "visit the script\'s homepage" :
                                      "install the latest version"; ?>?') ) {
<?php if (isset($_GET["show"])) { ?>
            GM_openInTab('http://userscripts.org/scripts/show/' + id);
<?php } else { ?>
            try {
                location.href = 'http://userscripts.org/scripts/source/' + id + '.user.js';
            } catch(e) {}
<?php } ?>
        } else if ( xversion && updated ) {
            if(confirm('Do you want to turn off auto updating for this script?')) {
                GM_setValue('updated<?php echo $var; ?>', 'off');
                enable();
                alert('Automatic updates can be re-enabled for this script from the User Script Commands submenu.');
            }
        } else if (response)
            alert('No updates available for '+name);
    }
    function check() {
        if (GM_getValue('updated<?php echo $var; ?>', 0) == "off")
            enable();
        else {
            if (+time > (+GM_getValue('updated<?php echo $var; ?>', 0) + 1000*60*60*24*days)) {
                GM_setValue('updated<?php echo $var; ?>', time+'');
                call(false, true);
            }
            GM_registerMenuCommand('Check '+name+' for updates', function() {
                GM_setValue('updated<?php echo $var; ?>', new Date().getTime()+'');
                call(true, true);
            });
        }
    }
    if (typeof GM_xmlhttpRequest !== 'undefined'<?php
if (!isset($_GET['noinfo'])) {
?> &&
        (typeof GM_info === 'object' ? // has a built-in updater?
         GM_info.scriptWillUpdate === false : true)<?php 
} ?>)
        try {
            if (unsafeWindow.frameElement === null) check();
        } catch(e) {
            check();
        }
})();
<?php
  print_gzipped_output();
?>
